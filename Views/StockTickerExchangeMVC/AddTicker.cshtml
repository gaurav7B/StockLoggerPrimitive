@{
    ViewData["Title"] = "Add Ticker";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f9fc;
            color: #333;
            margin: 0;
            padding: 0;
            display: flex;
            align-items: flex-start; /* Align items to the top */
            justify-content: center;
            height: auto; /* Remove full height */
            padding-top: 50px; /* Add some space at the top */
        }

        .container {
            display: flex;
            justify-content: space-between;
            background-color: #f7f9fc;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            gap: 20px;
            width: 100%;
            max-width: 1200px; /* Optional: Add a max width */
        }

        .form-container {
            flex: 1;
            background-color: #f5f5dc;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

            .form-container h2 {
                margin-bottom: 20px;
                font-size: 18px;
                color: #333;
            }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            font-size: 14px;
            color: #555;
            display: block;
            margin-bottom: 8px;
        }

        input[type="text"], input[type="number"] {
            width: 100%;
            padding: 12px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
            background-color: #f4f7f9;
        }

            input[type="text"]:focus, input[type="number"]:focus {
                outline: none;
                border-color: #3498db;
                background-color: #ffffff;
            }

        button {
            width: 100%;
            padding: 12px;
            background-color: #3498db;
            color: #ffffff;
            font-size: 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            button:hover {
                background-color: #2980b9;
            }

        .alert {
            color: #e74c3c;
            text-align: center;
            margin-top: 20px;
        }

        .alert-success {
            color: #2ecc71;
        }

        #priceDisplay {
            margin-top: 20px;
            font-size: 18px;
            text-align: center;
            color: #2c3e50;
            font-weight: bold;
        }

        .ticker-display-container {
            margin: 40px auto;
            padding: 20px;
            background-color: #f5f5dc;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: none;
            flex-direction: column;
            gap: 10px;
            max-width: 1200px;
            width: 100%;
        }


        .ticker-row {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
        }

        .ticker-box {
            background-color: #2980b9;
            color: #fff;
            padding: 10px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            cursor: pointer;
        }

            .ticker-box:hover {
                transform: scale(1.1);
                background-color: #3498db;
            }

            .ticker-box:active {
                background-color: #2980b9;
            }

        .ticker-count-box {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #2980b9;
            color: white;
            padding: 20px;
            border-radius: 10px;
            font-size: 18px;
            font-weight: bold;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            display: none;
            justify-content: center;
            align-items: center;
            min-width: 120px;
            cursor: pointer;
        }

    </style>
</head>
<body>

    <div class="container">
        <!-- Add Ticker Form -->
        <div class="form-container">
            <h2>Add Ticker</h2>
            <form id="addTickerForm">
                <div class="form-group">
                    <label for="ticker">Ticker:</label>
                    <input type="text" id="ticker" name="ticker" required />
                </div>
                <div class="form-group">
                    <label for="exchange">Exchange:</label>
                    <input type="text" id="exchange" name="exchange" required />
                </div>
                <div class="form-group">
                    <label for="companyName">Company Name:</label>
                    <input type="text" id="companyName" name="companyName" required />
                </div>
                <div class="form-group">
                    <button type="submit">Submit</button>
                </div>
                <div id="alert" class="alert" style="display:none;"></div>
            </form>
        </div>

        <!-- Test Form -->
        <div class="form-container">
            <h2>Test Ticker</h2>
            <form id="testForm">
                <div class="form-group">
                    <label for="tickerTest">Ticker:</label>
                    <input type="text" id="tickerTest" name="tickerTest" required />
                </div>
                <div class="form-group">
                    <label for="exchangeTest">Exchange:</label>
                    <input type="text" id="exchangeTest" name="exchangeTest" required />
                </div>
                <div class="form-group">
                    <button id="testButton" type="button">Test</button>
                </div>
                <div id="priceDisplay" style="display:none;">
                    <label for="price">Price:</label>
                    <input type="number" id="price" disabled />
                </div>
                <div id="alertTest" class="alert" style="display:none;"></div>
            </form>
        </div>

    </div>
    <div id="tickerDisplayContainer" class="ticker-display-container">
        <!-- Tickers will be displayed here dynamically -->
    </div>
    <div id="tickerCountBox" class="ticker-count-box">
        STOCKS : 0
    </div>
    <script>
        // Get the input elements
        const tickerInput = document.getElementById('ticker');
        const exchangeInput = document.getElementById('exchange');
        const tickerTestInput = document.getElementById('tickerTest');
        const exchangeTestInput = document.getElementById('exchangeTest');

        // Sync the Add Ticker form with the Test Ticker form
        tickerInput.addEventListener('input', () => {
            tickerTestInput.value = tickerInput.value;
        });
        exchangeInput.addEventListener('input', () => {
            exchangeTestInput.value = exchangeInput.value;
        });

        // Sync the Test Ticker form with the Add Ticker form
        tickerTestInput.addEventListener('input', () => {
            tickerInput.value = tickerTestInput.value;
        });
        exchangeTestInput.addEventListener('input', () => {
            exchangeInput.value = exchangeTestInput.value;
        });

        document.getElementById("addTickerForm").addEventListener("submit", async function (event) {
            event.preventDefault();

            const ticker = document.getElementById("ticker").value;
            const exchange = document.getElementById("exchange").value;
            const companyName = document.getElementById("companyName").value;

            const requestData = {
                ticker: ticker,
                exchange: exchange,
                companyName: companyName
            };

            try {
                const response = await fetch('https://localhost:44364/api/StockTickerExchange/Create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestData)
                });

                const alertDiv = document.getElementById("alert");

                if (response.ok) {
                    fetchAndDisplayTickers();
                    alertDiv.textContent = 'Stock Ticker Exchange added successfully!';
                    alertDiv.className = 'alert alert-success';
                    alertDiv.style.display = 'block';
                    document.getElementById("addTickerForm").reset();
                } else {
                    const errorData = await response.json();
                    alertDiv.textContent = errorData.message;
                    alertDiv.className = 'alert';
                    alertDiv.style.display = 'block';
                }

                setTimeout(() => {
                    alertDiv.style.display = 'none';
                }, 1000);
            } catch (error) {
                console.error('Error:', error);
                const alertDiv = document.getElementById("alert");
                alertDiv.textContent = 'An error occurred while adding the stock ticker exchange.';
                alertDiv.className = 'alert';
                alertDiv.style.display = 'block';

                setTimeout(() => {
                    alertDiv.style.display = 'none';
                }, 1000);
            }
        });

        document.getElementById("testButton").addEventListener("click", async function () {
            const ticker = document.getElementById("tickerTest").value;
            const exchange = document.getElementById("exchangeTest").value;

            if (!ticker || !exchange) {
                alert("Please enter both Ticker and Exchange before testing.");
                return;
            }

            const alertDiv = document.getElementById("alertTest");

            try {
                const response = await fetch(`https://localhost:44364/Stock/GetStockPriceByTicker?ticker=${ticker}&exchange=${exchange}`);

                if (response.ok) {
                    const data = await response.json();
                    const priceInput = document.getElementById("price");
                    const priceDisplay = document.getElementById("priceDisplay");

                    priceInput.value = data.price;
                    priceDisplay.style.display = 'block';

                    alertDiv.textContent = 'Test successful!';
                    alertDiv.className = 'alert alert-success';
                    alertDiv.style.display = 'block';

                    setTimeout(() => {
                        alertDiv.style.display = 'none';
                    }, 1000);

                    setTimeout(() => {
                        priceDisplay.style.display = 'none';
                    }, 2000);
                } else {
                    alertDiv.textContent = 'Test Failed';
                    alertDiv.className = 'alert';
                    alertDiv.style.display = 'block';

                    setTimeout(() => {
                        alertDiv.style.display = 'none';
                    }, 1000);
                }
            } catch (error) {
                console.error('Error:', error);
                alert("An error occurred while fetching the stock price.");

                alertDiv.textContent = 'Test Failed';
                alertDiv.className = 'alert';
                alertDiv.style.display = 'block';

                setTimeout(() => {
                    alertDiv.style.display = 'none';
                }, 1000);
            }
        });

        async function fetchAndDisplayTickers() {
            try {
                const response = await fetch('https://localhost:44364/api/StockTickerExchange/GetStockTickerExchanges');

                if (response.ok) {
                    const data = await response.json();
                    let tickers = [];

                    // Loop through the data array and extract the ticker
                    data.forEach(item => {
                        tickers.push(item.ticker);
                    });

                    // Update the ticker count dynamically
                    const tickerCountBox = document.getElementById('tickerCountBox');
                    tickerCountBox.textContent = `STOCKS : ${tickers.length}`;  // Set the actual count here

                    const tickerDisplayContainer = document.getElementById('tickerDisplayContainer');
                    tickerDisplayContainer.innerHTML = ''; // Clear the existing content

                    tickerDisplayContainer.style.display = 'flex';
                    tickerCountBox.style.display = 'flex';

                    // Group tickers into rows of 10
                    for (let i = 0; i < tickers.length; i += 10) {
                        const tickerRow = document.createElement('div');
                        tickerRow.classList.add('ticker-row');

                        tickers.slice(i, i + 10).forEach(ticker => {
                            const tickerDiv = document.createElement('div');
                            tickerDiv.classList.add('ticker-box');
                            tickerDiv.textContent = ticker;
                            tickerRow.appendChild(tickerDiv);
                        });

                        tickerDisplayContainer.appendChild(tickerRow);
                    }
                } else {
                    console.error("Failed to fetch data");
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // Run the fetchAndDisplayTickers function every minute
        setInterval(fetchAndDisplayTickers, 60000);

        // Run the fetchAndDisplayTickers function on page load
        window.onload = function () {
            fetchAndDisplayTickers();
        };


    </script>
</body>
</html>
